<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <RollForward>Major</RollForward>
    <PublishReadyToRun>false</PublishReadyToRun>
    <TieredCompilation>false</TieredCompilation>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ApplicationIcon>Icon.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup>
    <RunWorkingDirectory>bin/$(Configuration)/$(TargetFramework)</RunWorkingDirectory>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Icon.ico" />
    <None Remove="Icon.bmp" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Icon.ico">
      <LogicalName>Icon.ico</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Include="Icon.bmp">
      <LogicalName>Icon.bmp</LogicalName>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.*" />
    <PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.*" />
  </ItemGroup>

  <ItemGroup Condition="'$(OnlyWatchContentFiles)'=='true'">  
    <!-- Adds .fx files to the `dotnet watch`'s file scope -->  
    <Watch Include="Content/**/*.fx;"/>  
    <!-- Removes the .cs files from `dotnet watch`'s compile scope -->  
    <Compile Update="**/*.cs" Watch="false" />  
  </ItemGroup>

  <Target Name="RestoreDotnetTools" BeforeTargets="CollectPackageReferences">
    <Message Text="Restoring dotnet tools (this might take a while depending on your internet speed and should only happen upon building your project for the first time, or after upgrading MonoGame, or clearing your nuget cache)" Importance="High" />
    <Exec Command="dotnet tool restore" />
  </Target>

  <Target Name="BuildAndCopyContent" DependsOnTargets="IncludeContent">  
    <Message Text="Rebuilding Content..." Importance="High"/>  
    <Copy
        SourceFiles="%(ExtraContent.Identity)"  
        DestinationFiles="$(OutDir)%(ExtraContent.ContentDir)%(ExtraContent.RecursiveDir)%(ExtraContent.Filename)%(ExtraContent.Extension)"
        SkipUnchangedFiles="true"  
    />  
  </Target>

  <Target Name="WatchContent">  
  <Exec Command="dotnet watch build --property OnlyWatchContentFiles=true --property AutoRestoreMGCBTool=false -- --target:BuildAndCopyContent --restore:false"  
        EnvironmentVariables="DOTNET_WATCH_SUPPRESS_EMOJIS=1"/>  
</Target>
</Project>